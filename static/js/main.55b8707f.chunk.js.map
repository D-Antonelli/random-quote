{"version":3,"sources":["components/navigation.js","components/logo.js","components/footer.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","props","data-keyword","onClick","className","Logo","id","Footer","role","aria-label","defaultQuote","text","author","iconStyle","color","fontSize","App","useState","backgroundImage","setBackgroundImage","quotes","setQuotes","filteredQuotes","setFilteredQuotes","randomQuote","setRandomQuote","fetchQuotes","a","axios","get","response","data","useEffect","generateRandomItem","changeBackgroundImage","randomImageIndex","Math","floor","random","config","url","result","length","e","filter","quote","includes","target","dataset","keyword","style","icon","faQuoteLeft","href","title","faTwitterSquare","rel","faLinkedin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","ReactDOMServer","renderToString"],"mappings":"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","file":"static/js/main.55b8707f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = (props) => {\r\n    return (\r\n      <nav>\r\n        <button data-keyword=\"love\" onClick={props.onClick} className=\"nav-btn\">\r\n          #love\r\n        </button>\r\n        <button\r\n          data-keyword=\"happiness\"\r\n          onClick={props.onClick}\r\n          className=\"nav-btn\"\r\n        >\r\n          #happiness\r\n        </button>\r\n        <button data-keyword=\"life\" onClick={props.onClick} className=\"nav-btn\">\r\n          #life\r\n        </button>\r\n        <button\r\n          data-keyword=\"success\"\r\n          onClick={props.onClick}\r\n          className=\"nav-btn\"\r\n        >\r\n          #success\r\n        </button>\r\n        <button data-keyword=\"wisdom\" onClick={props.onClick} className=\"nav-btn\">\r\n          #wisdom\r\n        </button>\r\n        <button\r\n          data-keyword=\"kindness\"\r\n          onClick={props.onClick}\r\n          className=\"nav-btn\"\r\n        >\r\n          #kindness\r\n        </button>\r\n      </nav>\r\n    );\r\n  };\r\n\r\n  export default Navigation;","import React from 'react';\r\n\r\nconst Logo = () => {\r\n    return (\r\n      <div id=\"logo\">\r\n          <span id=\"logo-capital\">I</span>nspired | your random inspiration\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default Logo;  ","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n      <footer>\r\n        <p>\r\n          Made with{\" \"}\r\n          <span role=\"img\" aria-label=\"heart\">\r\n            ❤️\r\n          </span>{\" \"}\r\n          by Derya A.\r\n        </p>\r\n      </footer>\r\n    );\r\n  };\r\n\r\nexport default Footer;  ","import React, { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Navigation from \"./components/navigation\"\r\nimport Logo from \"./components/logo\"\r\nimport Footer from \"./components/footer\"\r\nimport axios from \"axios\";\r\nimport { faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  faTwitterSquare,\r\n  faLinkedin,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst defaultQuote = {\r\n  text:\r\n    \"Start by doing what's necessary; then do what's possible; and suddenly you are doing the impossible\",\r\n  author: \"Francis of Assisi\",\r\n};\r\n\r\nconst iconStyle = {\r\n  color: \"white\",\r\n  fontSize: \"3vw\",\r\n};\r\n\r\n\r\nfunction App() {\r\n  const [backgroundImage, setBackgroundImage] = useState(\"https://source.unsplash.com/collection/365/1100x600/?\");\r\n  const [quotes, setQuotes] = useState([defaultQuote]);\r\n  const [filteredQuotes, setFilteredQuotes] = useState([]);\r\n  const [randomQuote, setRandomQuote] = useState([]);\r\n\r\n\r\n  const filter = function (e) {\r\n    setFilteredQuotes(quotes.filter(quote => quote.text.includes(e.target.dataset.keyword)));\r\n  };\r\n\r\n  const fetchQuotes = async () => {\r\n    const response = await axios.get(\"https://type.fit/api/quotes\");\r\n    setQuotes(response.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchQuotes();\r\n    generateRandomItem();\r\n    changeBackgroundImage();\r\n  },[filteredQuotes]); \r\n\r\n\r\n  const changeBackgroundImage = async () => {\r\n    const numImagesAvailable = 121;\r\n    let randomImageIndex = Math.floor(Math.random() * numImagesAvailable);\r\n\r\n    const response = await axios.get(\r\n      `https://source.unsplash.com/collection/365/1100x600/?sig=${randomImageIndex}`\r\n    );\r\n\r\n    setBackgroundImage(response.config.url);\r\n  };\r\n\r\n  \r\n  const generateRandomItem = function() {\r\n    let result =\r\n    filteredQuotes.length > 0\r\n      ? filteredQuotes\r\n      : quotes;\r\n    let random = Math.floor(Math.random() * result.length);\r\n    setRandomQuote(result[random]);\r\n  }\r\n\r\n\r\n    return (\r\n      <div id=\"content-wrapper\">\r\n        <header id=\"header\">\r\n          <Logo />\r\n          <Navigation onClick={e => filter(e)} />\r\n        </header>\r\n        <main>\r\n          <div\r\n            id=\"quote-box\"\r\n            style={{ backgroundImage: `url(${backgroundImage})` }}\r\n          >\r\n            <div id=\"text-box\">\r\n              <FontAwesomeIcon icon={faQuoteLeft} />\r\n              <span id=\"text\">{randomQuote.text}</span>\r\n            </div>\r\n            <p id=\"author\">\r\n              -<span id=\"author-name\">{randomQuote.author}</span>\r\n            </p>\r\n            <div id=\"buttons\">\r\n              <div id=\"icons\">\r\n                <a\r\n                  href={\"https://twitter.com/intent/tweet?hashtags=motivation&text=\"+randomQuote.text + \" -\" + randomQuote.author}\r\n                  id=\"tweet-quote\"\r\n                  title=\"Tweet this quote!\"\r\n                  target=\"_top\"\r\n                >\r\n                  <FontAwesomeIcon icon={faTwitterSquare} style={iconStyle} />\r\n                </a>\r\n                <a\r\n                  href={\"https://www.linkedin.com/shareArticle?mini=true&url=https://d-antonelli.github.io/random-quote/\"}\r\n                  id=\"linkedin-quote\"\r\n                  target=\"_blank\"\r\n                  title=\"Share this website!\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <FontAwesomeIcon icon={faLinkedin} style={iconStyle} />\r\n                </a>\r\n              </div>\r\n              <button id=\"new-quote\" onClick={() => {\r\n                changeBackgroundImage();\r\n                generateRandomItem();}}>\r\n                new quote\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </main>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactDOMServer from 'react-dom/server';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nReactDOMServer.renderToString(<App />);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}