{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["defaultQuote","text","author","iconStyle","color","fontSize","Logo","id","Footer","role","aria-label","Navigation","props","data-keyword","onClick","className","App","filter","e","this","setState","prevState","filteredItems","items","item","includes","target","dataset","keyword","fetchQuotes","a","axios","get","response","data","changeBackgroundImage","randomImageIndex","Math","floor","random","backgroundImage","config","url","state","bind","length","randomQuote","randomAuthor","tweet","style","icon","faQuoteLeft","href","title","faTwitterSquare","rel","faLinkedin","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b9499f1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  faTwitterSquare,\n  faLinkedin,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst defaultQuote = {\n  text:\n    \"Start by doing what's necessary; then do what's possible; and suddenly you are doing the impossible\",\n  author: \"Francis of Assisi\",\n};\n\nconst iconStyle = {\n  color: \"white\",\n  fontSize: \"3vw\",\n};\n\nconst Logo = () => {\n  return (\n    <div id=\"logo\">\n        <span id=\"logo-capital\">I</span>nspired | your random inspiration\n    </div>\n  );\n};\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>\n        Made with{\" \"}\n        <span role=\"img\" aria-label=\"heart\">\n          ❤️\n        </span>{\" \"}\n        by Derya A.\n      </p>\n    </footer>\n  );\n};\n\nconst Navigation = (props) => {\n  return (\n    <nav>\n      <button data-keyword=\"love\" onClick={props.onClick} className=\"nav-btn\">\n        #love\n      </button>\n      <button\n        data-keyword=\"happiness\"\n        onClick={props.onClick}\n        className=\"nav-btn\"\n      >\n        #happiness\n      </button>\n      <button data-keyword=\"life\" onClick={props.onClick} className=\"nav-btn\">\n        #life\n      </button>\n      <button\n        data-keyword=\"success\"\n        onClick={props.onClick}\n        className=\"nav-btn\"\n      >\n        #success\n      </button>\n      <button data-keyword=\"wisdom\" onClick={props.onClick} className=\"nav-btn\">\n        #wisdom\n      </button>\n      <button\n        data-keyword=\"kindness\"\n        onClick={props.onClick}\n        className=\"nav-btn\"\n      >\n        #kindness\n      </button>\n    </nav>\n  );\n};\n\nclass App extends React.Component {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundImage: \"https://source.unsplash.com/collection/365/1100x600/?\",\n      items: [defaultQuote],\n      filteredItems: [],\n    };\n    this.changeBackgroundImage = this.changeBackgroundImage.bind(this);\n  }\n\n  filter = function (e) {\n    this.setState((prevState, props) => {\n      return {\n        filteredItems: prevState.items.filter((item) =>\n          item.text.includes(e.target.dataset.keyword)\n        ),\n      };\n    });\n  };\n\n  fetchQuotes = async () => {\n    const response = await axios.get(\"https://type.fit/api/quotes\");\n    this.setState({\n      items: response.data,\n    });\n  };\n\n  componentDidMount() {\n    this.fetchQuotes();\n  }\n\n  changeBackgroundImage = async () => {\n    const numImagesAvailable = 121;\n    let randomImageIndex = Math.floor(Math.random() * numImagesAvailable);\n\n    const response = await axios.get(\n      `https://source.unsplash.com/collection/365/1100x600/?sig=${randomImageIndex}`\n    );\n\n    this.setState({\n      backgroundImage: response.config.url,\n    });\n  };\n\n  render() {\n    let items =\n      this.state.filteredItems.length > 0\n        ? this.state.filteredItems\n        : this.state.items;\n    let random = Math.floor(Math.random() * items.length);\n    let randomQuote = items[random].text;\n    let randomAuthor = items[random].author;\n    let tweet = \"https://twitter.com/intent/tweet?hashtags=motivation&text=\"+randomQuote + \" -\" + randomAuthor;\n    let linkedin = \"https://www.linkedin.com/shareArticle?mini=true&url=https://d-antonelli.github.io/random-quote/\";\n\n    return (\n      <div id=\"content-wrapper\">\n        <header id=\"header\">\n          <Logo />\n          <Navigation onClick={(e) => this.filter(e)} />\n        </header>\n        <main>\n          <div\n            id=\"quote-box\"\n            style={{ backgroundImage: `url(${this.state.backgroundImage})` }}\n          >\n            <div id=\"text-box\">\n              <FontAwesomeIcon icon={faQuoteLeft} />\n              <span id=\"text\">{randomQuote}</span>\n            </div>\n            <p id=\"author\">\n              -<span id=\"author-name\">{randomAuthor}</span>\n            </p>\n            <div id=\"buttons\">\n              <div id=\"icons\">\n                <a\n                  href={tweet}\n                  id=\"tweet-quote\"\n                  title=\"Tweet this quote!\"\n                  target=\"_top\"\n                >\n                  <FontAwesomeIcon icon={faTwitterSquare} style={iconStyle} />\n                </a>\n                <a\n                  href={linkedin}\n                  id=\"linkedin-quote\"\n                  target=\"_blank\"\n                  title=\"Share this website!\"\n                  rel=\"noreferrer\"\n                >\n                  <FontAwesomeIcon icon={faLinkedin} style={iconStyle} />\n                </a>\n              </div>\n              <button id=\"new-quote\" onClick={this.changeBackgroundImage}>\n                new quote\n              </button>\n            </div>\n          </div>\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}