{"version":3,"sources":["components/navigation.js","components/logo.js","components/footer.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","props","data-keyword","onClick","className","Logo","id","Footer","role","aria-label","defaultQuote","text","author","iconStyle","color","fontSize","App","filter","e","this","setState","prevState","filteredItems","items","item","includes","target","dataset","keyword","fetchQuotes","a","axios","get","response","data","changeBackgroundImage","randomImageIndex","Math","floor","random","backgroundImage","config","url","state","bind","length","randomQuote","randomAuthor","tweet","style","icon","faQuoteLeft","href","title","faTwitterSquare","rel","faLinkedin","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b89df41.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = (props) => {\r\n    return (\r\n      <nav>\r\n        <button data-keyword=\"love\" onClick={props.onClick} className=\"nav-btn\">\r\n          #love\r\n        </button>\r\n        <button\r\n          data-keyword=\"happiness\"\r\n          onClick={props.onClick}\r\n          className=\"nav-btn\"\r\n        >\r\n          #happiness\r\n        </button>\r\n        <button data-keyword=\"life\" onClick={props.onClick} className=\"nav-btn\">\r\n          #life\r\n        </button>\r\n        <button\r\n          data-keyword=\"success\"\r\n          onClick={props.onClick}\r\n          className=\"nav-btn\"\r\n        >\r\n          #success\r\n        </button>\r\n        <button data-keyword=\"wisdom\" onClick={props.onClick} className=\"nav-btn\">\r\n          #wisdom\r\n        </button>\r\n        <button\r\n          data-keyword=\"kindness\"\r\n          onClick={props.onClick}\r\n          className=\"nav-btn\"\r\n        >\r\n          #kindness\r\n        </button>\r\n      </nav>\r\n    );\r\n  };\r\n\r\n  export default Navigation;","import React from 'react';\r\n\r\nconst Logo = () => {\r\n    return (\r\n      <div id=\"logo\">\r\n          <span id=\"logo-capital\">I</span>nspired | your random inspiration\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default Logo;  ","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n      <footer>\r\n        <p>\r\n          Made with{\" \"}\r\n          <span role=\"img\" aria-label=\"heart\">\r\n            ❤️\r\n          </span>{\" \"}\r\n          by Derya A.\r\n        </p>\r\n      </footer>\r\n    );\r\n  };\r\n\r\nexport default Footer;  ","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Navigation from \"./components/navigation\"\r\nimport Logo from \"./components/logo\"\r\nimport Footer from \"./components/footer\"\r\nimport axios from \"axios\";\r\nimport { faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  faTwitterSquare,\r\n  faLinkedin,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst defaultQuote = {\r\n  text:\r\n    \"Start by doing what's necessary; then do what's possible; and suddenly you are doing the impossible\",\r\n  author: \"Francis of Assisi\",\r\n};\r\n\r\nconst iconStyle = {\r\n  color: \"white\",\r\n  fontSize: \"3vw\",\r\n};\r\n\r\n\r\nclass App extends Component {\r\n  // eslint-disable-next-line no-useless-constructor\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      backgroundImage: \"https://source.unsplash.com/collection/365/1100x600/?\",\r\n      items: [defaultQuote],\r\n      filteredItems: [],\r\n    };\r\n    this.changeBackgroundImage = this.changeBackgroundImage.bind(this);\r\n  }\r\n\r\n  filter = function (e) {\r\n    this.setState((prevState, props) => {\r\n      return {\r\n        filteredItems: prevState.items.filter((item) =>\r\n          item.text.includes(e.target.dataset.keyword)\r\n        ),\r\n      };\r\n    });\r\n  };\r\n\r\n  fetchQuotes = async () => {\r\n    const response = await axios.get(\"https://type.fit/api/quotes\");\r\n    this.setState({\r\n      items: response.data,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchQuotes();\r\n  }\r\n\r\n  changeBackgroundImage = async () => {\r\n    const numImagesAvailable = 121;\r\n    let randomImageIndex = Math.floor(Math.random() * numImagesAvailable);\r\n\r\n    const response = await axios.get(\r\n      `https://source.unsplash.com/collection/365/1100x600/?sig=${randomImageIndex}`\r\n    );\r\n\r\n    this.setState({\r\n      backgroundImage: response.config.url,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let items =\r\n      this.state.filteredItems.length > 0\r\n        ? this.state.filteredItems\r\n        : this.state.items;\r\n    let random = Math.floor(Math.random() * items.length);\r\n    let randomQuote = items[random].text;\r\n    let randomAuthor = items[random].author || \"Anonymous\";\r\n    let tweet = \"https://twitter.com/intent/tweet?hashtags=motivation&text=\"+randomQuote + \" -\" + randomAuthor;\r\n    let linkedin = \"https://www.linkedin.com/shareArticle?mini=true&url=https://d-antonelli.github.io/random-quote/\";\r\n\r\n    return (\r\n      <div id=\"content-wrapper\">\r\n        <header id=\"header\">\r\n          <Logo />\r\n          <Navigation onClick={(e) => this.filter(e)} />\r\n        </header>\r\n        <main>\r\n          <div\r\n            id=\"quote-box\"\r\n            style={{ backgroundImage: `url(${this.state.backgroundImage})` }}\r\n          >\r\n            <div id=\"text-box\">\r\n              <FontAwesomeIcon icon={faQuoteLeft} />\r\n              <span id=\"text\">{randomQuote}</span>\r\n            </div>\r\n            <p id=\"author\">\r\n              -<span id=\"author-name\">{randomAuthor}</span>\r\n            </p>\r\n            <div id=\"buttons\">\r\n              <div id=\"icons\">\r\n                <a\r\n                  href={tweet}\r\n                  id=\"tweet-quote\"\r\n                  title=\"Tweet this quote!\"\r\n                  target=\"_top\"\r\n                >\r\n                  <FontAwesomeIcon icon={faTwitterSquare} style={iconStyle} />\r\n                </a>\r\n                <a\r\n                  href={linkedin}\r\n                  id=\"linkedin-quote\"\r\n                  target=\"_blank\"\r\n                  title=\"Share this website!\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  <FontAwesomeIcon icon={faLinkedin} style={iconStyle} />\r\n                </a>\r\n              </div>\r\n              <button id=\"new-quote\" onClick={this.changeBackgroundImage}>\r\n                new quote\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </main>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}